apiVersion: v1
kind: Pod
metadata:
  name: pv-recycler
  namespace: default
spec:
  restartPolicy: Never #podが落ちた時リスタートされない
  volumes: #
  - name: vol
    hostPath:
      path: /any/path/it/will/be/replaced
  containers:
  - name: pv-recycler
    image: "registry.k8s.io/busybox"
    command: ["/bin/sh", "-c", "test -e /scrub && rm -rf /scrub/..?* /scrub/.[!.]* /scrub/*  && test -z \"$(ls -A /scrub)\" || exit 1"]
#シェルをコマンドを指定するオプション込みで起動するのが　/bin/sh, -c
    command:
    - sleep　#シェルを起動せずとも実行できるコマンドは、binbashいらない
    - "4800"
    args: ["--color", "green"]　#podが起動した時に自動で引き渡される変数 argsで検索すればcommunity forlumにある
    env:
    - name: APP_COLOR
      value: pink
    volumeMounts:
    - name: vol
      mountPath: /scrub
  - name: nginx
    image: nginx
  initContainers: #initコンテナをここで記述することができる
  - image: busybox
    name: red-initcontainer
    command: 
      - "sleep"
      - "20"
  nodeName: $node-name #デプロイ先ノードを手動で指定（schedulerが起動していないくてもOK）
  
#Yamlの書き方
[]はリストなので以下は同じ意味になる
command: ["/bin/sh", "-c", "test -e /scrub && rm -rf /scrub/..?* /scrub/.[!.]* /scrub/*  && test -z \"$(ls -A /scrub)\" || exit 1"]

command:
  - /bin/sh
  - -c
  - test -e /scrub && rm -rf /scrub/..?* /scrub/.[!.]* /scrub/*  && test -z \"$(ls -A /scrub)\" || exit 1



#init container
initContainer（イニシャルコンテナ）は、Kubernetes Pod内で最初に起動される特殊なコンテナです。通常のコンテナとは異なり、initContainerはPod内の他のすべてのコンテナが開始される前に実行されます。主な目的は、アプリケーションコンテナが実行される前に必要な前提条件を満たすための処理を行うことです。
controlplane ~ ➜  k get po 
NAME     READY   STATUS     RESTARTS   AGE
green    2/2     Running    0          3m58s
red      1/1     Running    0          3m58s
blue     1/1     Running    0          3m58s
purple   0/1     Init:0/2   0          10s
イニットコンテナが２つ実行されているのがわかる

